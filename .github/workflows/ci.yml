name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint and Format Check
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Check TypeScript
      run: npm run type-check

  test:
    runs-on: ${{ matrix.os }}
    name: Test on ${{ matrix.os }} with Node.js ${{ matrix.node-version }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [16, 18, 20]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '18'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info

  build-wasm:
    runs-on: ubuntu-latest
    name: Build WebAssembly Module
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Emscripten
      uses: mymindstorm/setup-emsdk@v12
      with:
        version: 'latest'
        
    - name: Verify Emscripten installation
      run: emcc -v
      
    - name: Build WASM module
      run: |
        cd build
        make check-emscripten
        make wasm
        
    - name: Verify WASM output
      run: |
        ls -la dist/
        file dist/ttx-wasm.wasm
        
    - name: Upload WASM artifacts
      uses: actions/upload-artifact@v3
      with:
        name: wasm-build-${{ github.sha }}
        path: |
          dist/ttx-wasm.wasm
          dist/ttx-wasm.js

  integration-test:
    runs-on: ubuntu-latest
    name: Integration Tests
    needs: [build-wasm]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download WASM artifacts
      uses: actions/download-artifact@v3
      with:
        name: wasm-build-${{ github.sha }}
        path: dist/
        
    - name: Run integration tests
      run: npm run test:integration
      
    - name: Test browser compatibility
      run: npm run test:browser

  build:
    runs-on: ubuntu-latest
    name: Build Package
    needs: [lint, test, build-wasm]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download WASM artifacts
      uses: actions/download-artifact@v3
      with:
        name: wasm-build-${{ github.sha }}
        path: dist/
        
    - name: Build package
      run: npm run build
      
    - name: Package for NPM
      run: npm pack
      
    - name: Upload package artifact
      uses: actions/upload-artifact@v3
      with:
        name: npm-package-${{ github.sha }}
        path: "*.tgz"

  security:
    runs-on: ubuntu-latest
    name: Security Audit
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level high
      continue-on-error: true
      
    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v2
      with:
        languages: javascript, cpp
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
